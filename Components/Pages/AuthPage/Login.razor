@page "/login"
@layout EmptyLayout

@rendermode InteractiveServer
@using System.ComponentModel.DataAnnotations
@using BroasterWebApp.DTOs
@using BroasterWebApp.Entities
@using BroasterWebApp.interfaces
@using Microsoft.AspNetCore.Session
@using BroasterWebApp.Components.Layout
@inject IUserDomainService userDomainService
@inject NavigationManager Navigation

<div class="login-page">
    <div class="login-card">
        <h3>Iniciar Sesión</h3>

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="error-message">@errorMessage</div>
        }

        <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label>Usuario</label>
                <InputText @bind-Value="loginModel.Username" class="form-control" />
            </div>

            <div class="form-group">
                <label>Contraseña</label>
                <InputText @bind-Value="loginModel.Password" class="form-control" type="password" />
            </div>

            <button type="submit" class="login-button">Entrar</button>
        </EditForm>
    </div>
</div>
<link href="Login.css" rel="stylesheet" />


@code {
    private LoginDTO loginModel = new LoginDTO();
    private string errorMessage;

    private async Task HandleLogin()
    {
        var url = $"/account/signin?username={loginModel.Username}&password={loginModel.Password}";
        Navigation.NavigateTo(url, forceLoad: true);
    }
}
